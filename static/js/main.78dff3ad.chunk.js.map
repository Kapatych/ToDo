{"version":3,"sources":["components/header/header.jsx","components/search-panel/search-panel.jsx","components/filter/filter.jsx","components/todo-list-item/todo-list-item.jsx","components/todo-list/todo-list.jsx","components/add-item-form/add-item-form.jsx","components/app/app.jsx","index.js"],"names":["Header","todo","done","className","SearchPanel","state","text","changeText","e","setState","target","value","props","onSearchItems","type","placeholder","this","onChange","React","Component","Filter","filter","onFilterItems","buttons","label","map","classes","key","onClick","TodoListItem","task","important","onDeleteItem","onToggleDone","onToggleImportant","extraClass","TodoList","tasks","todoItems","item","id","itemProps","AddItemForm","submitForm","preventDefault","onAddItem","onSubmit","App","totalCountItem","createItem","data","term","deleteItem","el","addItem","toggleProperty","array","propName","idx","findIndex","oldItem","newItem","slice","toggleDone","toggleImportant","searchItems","items","slug","length","toLowerCase","indexOf","filterItems","filterType","totalDoneItem","totalTodoItem","foundItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78dff3ad.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css'\r\n\r\nconst Header = ( {todo, done} ) => {\r\n    return (\r\n        <header className='header d-flex'>\r\n            <h1>ToDo List</h1>\r\n            <h2>{todo} more to do, {done} done</h2>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends React.Component {\r\n\r\n    state = {\r\n        text: '',\r\n    };\r\n\r\n    changeText = (e) => {\r\n        this.setState({text: e.target.value});\r\n        this.props.onSearchItems(e.target.value);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <section className='search-panel'>\r\n                <input type='text' className='form-control search-input'\r\n                       placeholder='type to search'\r\n                       value={this.state.text}\r\n                       onChange={ this.changeText }/>\r\n            </section>\r\n        )\r\n    }\r\n\r\n};\r\n","import React from 'react';\r\nimport './filter.css';\r\n\r\nconst Filter = ({filter, onFilterItems}) => {\r\n\r\n    const buttonsData = [\r\n        {type: 'all', label: 'All'},\r\n        {type: 'active', label: 'Active'},\r\n        {type: 'done', label: 'Done'},\r\n    ];\r\n\r\n    const buttons = buttonsData.map( ({type, label}) => {\r\n        const isActive = type === filter;\r\n        const classes = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n\r\n        return (\r\n            <button key={type}\r\n                    className={`btn ${classes}`}\r\n                    onClick={ ()=> onFilterItems(type)} >{label}</button>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <section className='filter btn-group'>\r\n            {buttons}\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\nimport './todo-list-item.css';\r\n\r\nconst TodoListItem = ({task, important, done, onDeleteItem, onToggleDone, onToggleImportant}) => {\r\n    let extraClass = 'todo-list-item d-flex';\r\n    if(done) extraClass += ' done';\r\n    if(important) extraClass += ' important';\r\n    return (\r\n        <span className={extraClass}>\r\n                <span className='todo-list-item-label'\r\n                      onClick={ () => onToggleDone()}>{task}</span>\r\n\r\n                <button type='button'\r\n                        onClick={ () => onToggleImportant()}\r\n                        className=\"btn btn-outline-success btn-sm\">\r\n                     <i className=\"fa fa-exclamation\"/>\r\n                </button>\r\n                <button onClick={ ()=> onDeleteItem() }\r\n                        type='button'\r\n                        className=\"btn btn-outline-danger btn-sm\">\r\n                    <i className=\"fa fa-trash-o\"/>\r\n                </button>\r\n            </span>\r\n    )\r\n};\r\n\r\nexport default TodoListItem;","import React from 'react';\r\nimport TodoListItem from \"../todo-list-item/todo-list-item\";\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ( {tasks, onDeleteItem, onToggleDone, onToggleImportant} ) => {\r\n    const todoItems = tasks.map( item => {\r\n        const {id, ...itemProps} = item;\r\n\r\n        return (\r\n            <li key={id} className='list-group-item'>\r\n                <TodoListItem {...itemProps}\r\n                              onDeleteItem={ () => onDeleteItem(id) }\r\n                              onToggleDone={ () => onToggleDone(id) }\r\n                              onToggleImportant={ () => onToggleImportant(id) }/>\r\n            </li>\r\n        )\r\n    } );\r\n\r\n    return (\r\n        <section className='todo-list'>\r\n            <ul className='list-group'>\r\n                { todoItems }\r\n            </ul>\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport './add-item-form.css';\r\n\r\nexport default class AddItemForm extends React.Component{\r\n\r\n    state = {\r\n        text: '',\r\n    };\r\n\r\n    submitForm = (e) => {\r\n        e.preventDefault();\r\n        this.props.onAddItem(this.state.text);\r\n        this.setState({\r\n            text: ''\r\n        })\r\n    };\r\n\r\n    changeText = (e) => {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <section className='add-item-form'>\r\n                <form onSubmit={this.submitForm} className='d-flex'>\r\n                    <input type=\"text\"\r\n                           onChange={this.changeText}\r\n                           value={this.state.text}\r\n                           className='form-control search-input'/>\r\n                    <button className='btn btn-info'\r\n                            type='submit'>Add task</button>\r\n                </form>\r\n            </section>\r\n        )\r\n    }\r\n\r\n\r\n};","import React from 'react';\r\nimport './app.css';\r\nimport Header from \"../header/header\";\r\nimport SearchPanel from \"../search-panel/search-panel\";\r\nimport Filter from \"../filter/filter\";\r\nimport TodoList from \"../todo-list/todo-list\";\r\nimport AddItemForm from \"../add-item-form/add-item-form\";\r\n\r\nexport default class App extends React.Component {\r\n\r\n    totalCountItem = 1;\r\n\r\n    createItem = (task) => {\r\n        return {\r\n            id: this.totalCountItem++,\r\n            task,\r\n            important: false,\r\n            done: false\r\n        }\r\n    };\r\n\r\n    state = {\r\n        data: [\r\n            this.createItem('Drink Coffee'),\r\n            this.createItem('Drink Tea'),\r\n            this.createItem('Drink Whiskey'),\r\n            this.createItem('Drink Cola'),\r\n            this.createItem('Drink Water'),\r\n        ],\r\n        term: '',\r\n        filter: 'all',\r\n    };\r\n\r\n    deleteItem = (id) => {\r\n        this.setState( ({data}) => {\r\n            return {\r\n                data: data.filter( el => el.id !== id)\r\n            }\r\n        })\r\n    };\r\n\r\n    addItem = (text) => {\r\n        this.setState( ({data}) => {\r\n            return{\r\n                data: [...data, this.createItem(text)]\r\n            }\r\n        })\r\n    };\r\n\r\n    toggleProperty = (array, id, propName) => {\r\n\r\n        const idx = array.findIndex(el => el.id === id);\r\n        const oldItem = array[idx];\r\n        const newItem = {...oldItem, [propName]: !oldItem[propName]};\r\n\r\n        return [...array.slice(0, idx),\r\n            newItem,\r\n            ...array.slice(idx + 1)];\r\n    };\r\n\r\n    toggleDone = (id) => {\r\n        this.setState( ({data}) => {\r\n            return {\r\n                data: this.toggleProperty(data, id, 'done')\r\n            }\r\n        })\r\n    };\r\n\r\n    toggleImportant = (id) => {\r\n        this.setState( ({data}) => {\r\n            return {\r\n                data: this.toggleProperty(data, id, 'important')\r\n            }\r\n        })\r\n    };\r\n\r\n    searchItems = (items, slug) => {\r\n        if (slug.length === 0) return items;\r\n       return items.filter( el => el.task.toLowerCase().indexOf(slug.toLowerCase(), 0) !== -1 )\r\n    };\r\n\r\n    onSearchItems = (slug) => {\r\n        this.setState({term: slug})\r\n    };\r\n\r\n    filterItems = (items, filterType) => {\r\n        switch (filterType) {\r\n            case 'done':\r\n                return items.filter(el => el.done);\r\n            case 'active':\r\n                return items.filter(el => !el.done);\r\n            case 'all':\r\n                return items;\r\n            default:\r\n                return items;\r\n        }\r\n    };\r\n\r\n    onFilterItems = (type) => {\r\n        this.setState({filter: type});\r\n    };\r\n\r\n    render() {\r\n        const {data, term, filter} = this.state;\r\n\r\n        const totalDoneItem = data.filter( el => el.done === true).length;\r\n        const totalTodoItem = data.length - totalDoneItem;\r\n        const foundItems = this.filterItems(this.searchItems(data, term), filter);\r\n\r\n        return (\r\n            <div className='todo-app'>\r\n                <Header todo={totalTodoItem} done={totalDoneItem}/>\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel onSearchItems={this.onSearchItems}/>\r\n                    <Filter filter={filter} onFilterItems={this.onFilterItems}/>\r\n                </div>\r\n                <TodoList tasks={foundItems}\r\n                          onDeleteItem={this.deleteItem}\r\n                          onToggleDone={this.toggleDone}\r\n                          onToggleImportant={this.toggleImportant}/>\r\n                <AddItemForm onAddItem={this.addItem} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./components/app/app\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}